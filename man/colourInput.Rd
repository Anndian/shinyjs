% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/colourInput.R
\name{colourInput}
\alias{colourInput}
\title{Create a colour input control}
\usage{
colourInput(inputId, label, value = "white", showColour = c("both", "text",
  "background"))
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or `\code{NULL} for no label.}

\item{value}{Initial value (can be a colour name or HEX code)}

\item{showColour}{Whether to show the chosen colour as text inside the input,
as the background colour of the input, or both (default).}
}
\description{
Create an input control to select a colour.
}
\note{
Unlike the rest of the \code{shinyjs} functions, this function does
not require you to call \code{useShinyjs()} first.
}
\examples{
if (interactive()) {
  shiny::shinyApp(
    ui = shiny::fluidPage(
      colourInput("col", "Colour", "red"),
      shiny::textInput("text", "New colour: (colour name or HEX value)"),
      shiny::actionButton("btn", "Update")
    ),
    server = function(input, output, session) {
      shiny::observeEvent(input$btn, {
        updateColourInput(session, "col", value = input$text)
      })
    }
  )
}
}
\seealso{
\code{\link[shinyjs]{colourInput}}
}

